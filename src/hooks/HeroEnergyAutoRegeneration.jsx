
import { useEffect, useRef, useState } from "react";

// –¢–∞–π–º–µ—Ä –µ–Ω–µ—Ä–≥—ñ—ó –¥–ª—è –∞–≤—Ç–æ–∑–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –∫–æ–∂–Ω—ñ 5 —Ö–≤–∏–ª–∏–Ω
function useEnergyRegen({ userId, energy, setEnergy, maxEnergy, supabase }) {
  // –î–ª—è –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –±–∞–≥—ñ–≤ –ø—ñ–¥ —á–∞—Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏—Ö –∞–ø–¥–µ–π—Ç—ñ–≤ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—î–º–æ ref
  const timerRef = useRef(null);
  const [isAtMax, setIsAtMax] = useState(false);

  useEffect(() => {
    // –Ø–∫—â–æ –º–∏ –¥–æ—Å—è–≥–ª–∏ –º–∞–∫—Å–∏–º—É–º—É ‚Äî —Ç–∞–π–º–µ—Ä –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω
    setIsAtMax(energy >= maxEnergy);

    // –Ø–∫—â–æ –µ–Ω–µ—Ä–≥—ñ—è –≤–∂–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞, –∑—É–ø–∏–Ω—è—î–º–æ/–Ω–µ –∑–∞–ø—É—Å–∫–∞—î–º–æ —Ç–∞–π–º–µ—Ä
    if (energy >= maxEnergy) {
      if (timerRef.current) {
        clearInterval(timerRef.current);
        timerRef.current = null;
      }
      return;
    }

    // –§—É–Ω–∫—Ü—ñ—è, —â–æ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –∫–æ–∂–Ω—ñ 5 —Ö–≤–∏–ª–∏–Ω
    timerRef.current = setInterval(async () => {
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–µ —Ä–∞–∑ –¥–ª—è –ø–µ–≤–Ω–æ—Å—Ç—ñ (—Ä–∞–ø—Ç–æ–º –∑–º—ñ–Ω–∏–ª–æ—Å—è)
      if (energy < maxEnergy) {
        const newEnergy = energy + 1;
        setEnergy(newEnergy);

        // –ê–ø–¥–µ–π—Ç–∏–º–æ –Ω–∞ –±–µ–∫–µ–Ω–¥—ñ Supabase
        if (userId) {
          const { error } = await supabase
            .from("users")
            .upsert([{ id: userId, energy: newEnergy }], { onConflict: "id" });
          if (error) {
            // –í–∏ –º–æ–∂–µ—Ç–µ –¥–æ–¥–∞—Ç–∏ toast –∑ –ø–æ–º–∏–ª–∫–æ—é
            // toast.error("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –µ–Ω–µ—Ä–≥—ñ—é");
            console.error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –µ–Ω–µ—Ä–≥—ñ—ó:", error);
          }
        }
      } 
    }, 3000); // 5 —Ö–≤–∏–ª–∏–Ω = 300¬†000 –º—Å

    // –û—á–∏—â—É—î–º–æ —ñ–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–∏ —Ä–æ–∑–º–æ–Ω—Ç—É–≤–∞–Ω–Ω—ñ –∞–±–æ –∑–º—ñ–Ω—ñ –µ–Ω–µ—Ä–≥—ñ—ó/–º–∞–∫—Å –µ–Ω–µ—Ä–≥—ñ—ó
    return () => {
      if (timerRef.current) {
        clearInterval(timerRef.current);
        timerRef.current = null;
      }
    };
  }, [userId, energy, maxEnergy, supabase, setEnergy]);

  return isAtMax;
}

// –î–æ–¥–∞—î–º–æ –≤ –≥–æ–ª–æ–≤–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç (–∞–±–æ —Ç—É–¥–∏, –¥–µ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç–µ –µ–Ω–µ—Ä–≥—ñ—é —Ç–∞ –∞–≤—Ç–æ—Ä–µ–≥–µ–Ω)
const maxEnergy = 20; // –ú–æ–∂–Ω–∞ –≤–∏–Ω–µ—Å—Ç–∏ —É –∫–æ–Ω—Ñ—ñ–≥
// energy, setEnergy, userId, supabase - –≤–∂–µ —ñ—Å–Ω—É—é—Ç—å —É –≤–∞—à–æ–º—É —Å—Ç–∞–Ω—ñ/component

function HeroEnergyAutoRegeneration({ userId, energy, setEnergy, supabase, heroStats }) {
  // –ü—ñ—Å–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑ –ë–î –ø–æ—Ç–æ—á–Ω–æ–≥–æ energy

  // –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ —Ö—É–∫
  const isAtMax = useEnergyRegen({
    userId,
    energy,
    setEnergy,
    maxEnergy,
    supabase,
  });

  // –î–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –µ–Ω–µ—Ä–≥—ñ—ó
  const [energyAnim, setEnergyAnim] = useState(false);

  // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–æ–≤–∞–Ω–∏–π –µ—Ñ–µ–∫—Ç –Ω–∞ –∑–º—ñ–Ω—É –µ–Ω–µ—Ä–≥—ñ—ó
  useEffect(() => {
    setEnergyAnim(true);
    // –ó–∞ 1—Å –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —É –Ω–æ—Ä–º—É
    const timeout = setTimeout(() => setEnergyAnim(false), 1000);
    return () => clearTimeout(timeout);
  }, [energy]);

  // –ü—Ä–∏ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—ñ –º–∞–∫—Å–∏–º—É–º—É ‚Äî –º–æ–∂–Ω–∞ –ø–æ–∫–∞–∑–∞—Ç–∏ —Ç–æ—Å—Ç/–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
  useEffect(() => {
    if (isAtMax) {
      // toast.info("–ï–Ω–µ—Ä–≥—ñ—è –∑–∞–ø–æ–≤–Ω–µ–Ω–∞!");
    }
  }, [isAtMax]);

  return (
    <div
      style={{
        display: "flex",
        flexDirection: "row",
        justifyContent: "center",
        alignItems: "center",
        gap: "30px",
        padding: 10,
        color: "#fff",
        animation: "fadeIn 0.6s ease forwards",
      }}
    >
      <div style={{ display: "flex", justifyContent: "space-between", width: "50%" }}>
        <span>‚ù§Ô∏è </span>
        <span>{heroStats.health}</span>
      </div>
      <div style={{ display: "flex", justifyContent: "space-between", width: "50%" }}>
        <span>üó°Ô∏è </span>
        <span>{heroStats.attack}</span>
      </div>
      <div style={{ display: "flex", justifyContent: "space-between", width: "50%" }}>
        <span>üõ°Ô∏è</span>
        <span>{heroStats.defense}</span>
      </div>
      <div
        style={{
          display: "flex",
          justifyContent: "space-between",
          width: "50%",
          position: "relative",
        }}
      >
        <span>‚ö°</span>
        <span
          className={`${energyAnim ? "energy-anim" : ""}`}
          style={{
            fontWeight: "bold",
            color: energy >= maxEnergy ? "#22d3ee" : "#ffe066",
            transition: "color 0.4s, transform 0.4s",
            transform: energyAnim ? "scale(1.25)" : "scale(1)"
          }}
        >
          {energy}
        </span>
        {/* –ü–æ–∑–Ω–∞—á–∫–∞ –º–∞–∫—Å–∏–º—É–º—É –µ–Ω–µ—Ä–≥—ñ—ó */}
        {energy >= maxEnergy && (
          <span
            aria-label="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –µ–Ω–µ—Ä–≥—ñ—è"
            style={{
              marginLeft: 6,
              fontSize: 14,
              color: "#48e19f",
              fontWeight: 600,
              transition: "color 0.2s",
            }}
          >
            MAX
          </span>
        )}
      </div>
      {/* –°—Ç–∏–ª–∏ –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó */}
      <style>
        {`
        .energy-anim {
          animation: pulseEnergy .8s cubic-bezier(.4,0,.2,1);
        }
        @keyframes pulseEnergy {
          0% { transform: scale(1); filter: brightness(1.32);}
          40% { transform: scale(1.3); filter: brightness(2);}
          100% { transform: scale(1); filter: brightness(1);}
        }
        `}
      </style>
    </div>
  );
}

export default HeroEnergyAutoRegeneration;